метод setInterval, который запускает заданный код через определенные промежутки времени.
Метод setInterval работает следующим образом: первым параметром она принимает имя функции 
(без кавычек и круглых скобок), а вторым параметром - через какой промежуток запускать эту функцию. 
Второй параметр задается в миллисекундах (1000 миллисекунд = 1 секунда).

----------------------------- setInterval ---------------------------
Пример: window.setInterval(timer, 1000) - этот код будет запускать функцию timer раз в секунду. 
И каждую секунду эта функция timer будет выполнять какие-то полезные операции, например, 
увеличивать счетчик на странице.

/*
<input type="text" value="1" id="test">
<input type="submit" onclick="start()">
*/

function start()
{
	//По нажатию на кнопку наш таймер начнет работать:
	window.setInterval(timer, 1000);
}

//Эта функция будет запускаться каждую секунду
function timer()
{
	var elem = document.getElementById('test');
	elem.value = parseInt(elem.value)+1; //parseInt преобразует строку в число
}

-------------------------- clearInterval --------------------------
метод clearInterval принимает уникальный номер того таймера 
(созданного через setInterval), который нужно остановить.

/*
<input type="submit" onclick="test()">
*/

function test()
{
	timerId = window.setInterval(timer, 1000);
	alert(timerId); //выведет номер таймера: 2, 3, 4 ...
}

//Ничего не делает, просто заглушка
function timer()
{

}
------------------------------
при создание таймера через setInterval мы можем узнать его номер, 
и потом передать его методу clearInterval, чтобы таймер остановился.

/*
<input type="text" value="1" id="test">
<input type="submit" value="start" onclick="start()">
<input type="submit" value="stop" onclick="stop()">
*/

//Эта функция запускает таймер
function start()
{
	window.timerId = window.setInterval(timer, 1000);
}
//Эта функция останавливает таймер
function stop()
{
	window.clearInterval(window.timerId);
}

//Эта функция меняет value для инпута
function timer()
{
	var elem = document.getElementById('test');
	elem.value = parseInt(elem.value)+1;
}
 в window.timerId при каждом новом запуске будет лежать новое значение.

 если много раз понажимать на кнопку start, не нажимая stop, то вы запустите много таймеров, 
 каждый из которых будет менять содержимое инпута. И получится так, что значения атрибута 
 value будут меняться не раз в секунду, а гораздо чаще (и неравномерно). При этом кнопка stop 
 сможет остановить только последний таймер (так как каждый новый таймер будет затирать глобальную 
 	переменную window.timerId и там всегда будет лежать номер последнего запущенного таймера).

----------------------------- setTimeout -------------------------
setTimeout позволяет сделать задержку перед запуском кода (эта задержка случится только один раз 
и код выполнится только один раз, в отличии от setInterval).
/*
<input type="submit" onclick="start()">
*/

function start()
{
	window.setTimeout(func, 3000);
}
function func()
{
	alert('!');
}
Что происходит в этом примере - по нажатию на кнопку сработает функция start, которая вызывает 
функцию func с задержкой с 3 секунды (3000 миллисекунд = 3 секунды). Ну, а функция func 
выводит alert в тот момент, когда вызвана.

----------------------------- setTimeout и рекурсия ---------------------------
рекурсией (это когда функция вызывает сама себя).

нажатие на кнопку start запускает функцию timer, которая увеличивает значение инпута на 1 
и после этого вызывает саму себя с задержкой в 1 секунду. Получится, что через 1 секунду функция timer 
опять начнет работать, опять увеличит значение инпута и опять вызовет саму себя с задержкой. 
И так до бесконечности:
/*
<input type="text" value="1" id="test">
<input type="submit" value="start" onclick="timer()">
*/
function timer()
{
	var elem = document.getElementById('test');
	elem.value = parseInt(elem.value)+1;

	window.setTimeout(timer, 1000); //рекурсия
}
---------------
В следующем примере таймер остановится, когда значение инпута станет равно 10-ти:
function timer()
{
	var elem = document.getElementById('test'); //получаем наш инпут
	elem.value = parseInt(elem.value)+1; //увеличиваем значение атрибута на единицу

	if(elem.value < 10) //если в инпуте меньше 10-ти - то работаем дальше
	{
		//Функция timer запускает саму себя с задержкой в 1 секунду:
		window.setTimeout(timer, 1000);
	}
}