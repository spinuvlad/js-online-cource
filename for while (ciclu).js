----------------------- while ---------------------------
while ( пока выражение истинно )
{
	выполняем этот код циклически; 
	в начале каждого цикла проверяем выражение в круглых скобках
}
-----------------
var i = 0; //счетчик цикла      // Для счетчиков принято использовать буквы i, j и k.
while (i < 5)
{
	/*
		С помощью оператора ++ увеличиваем i на единицу 
		при каждом проходе цикла.
	*/
	i++;
	alert(i);
}

------------------------- for ---------------------------
Цикл for является альтернативой while. 
Он более сложен для понимания, но чаще всего его любят больше, 
чем while за то, что он занимает меньше строчек.

for ( начальные команды; условие окончания цикла; команды после прохода цикла )
{
	тело цикла
}
-----------------------
Начальные команды - это то, что выполнится перед стартом цикла. 
Они выполнятся только один раз. Обычно там размещают начальные значения счетчиков, пример: i = 0.

Условие окончания цикла - пока оно истинное, цикл будет работать, пример: i <10.

Команды после прохода цикла - это команды, которые будут выполнятся каждый раз при окончании прохода цикла. 
Обычно там увеличивают счетчики, например: i++.
-----------------------
for (var i = 0; i < 10; i++)
{
	alert(i); //выведет 0, 1, 2... 9
}
-----------------------
fara acolade:
for (var i = 0; i < 10; i++); //<--- точка с запятой есть
	alert(i); //выведет 9

----------------------- Несколько команд в цикле for ----------------------
for (var i = 0, j = 2; i < 10; i++, j++,  i = i + j)
{

}
до прохода цикла выполнятся две команды: var i = 0, j = 2 
(обратите внимание на то, что var тут пишется один раз), 
а после каждой итерации - целых три: i++, j++, i = i + j.

---------------------------- Цикл for для массивов ---------------------------
var arr = [1, 2, 3, 4, 5];
for (var i = 0; i <= arr.length-1; i++)
{
	alert(arr[i]); //выведет 1, 2, 3, 4, 5
}
------------
var arr = [1, 2, 3, 4, 5];
for (var i = 0; i < arr.length; i++)
{
	alert(arr[i]); //выведет 1, 2, 3, 4, 5
}
--------------------------------- Цикл for-in -------------------------------
Давайте выведем его ключи. Для этого используем такую конструкцию: 
for (key in obj), где obj - это объект, который мы перебираем, а key - это переменная, 
	в которую последовательно будут ложится ключи объекта (ее название может быть любым, какое придумаете - такое и будет).
То есть в данном цикле не надо указывать условие окончания - он будет перебирать ключи объекта, пока они не закончатся.

var obj = {'Коля':200, 'Вася':300, 'Петя':400};
for (key in obj)
{
	alert(key); //выведет 'Коля', 'Вася', 'Петя'
}
--------------------
Если нам нужны не ключи, а значения, нужно обратиться к нашему объекту по ключу, вот так: obj[key].

var obj = {'Коля':200, 'Вася':300, 'Петя':400};
for (key in obj)
{
	alert(obj[key]); //выведет 200, 300, 400
}
------------------------------- break -------------------------------
Иногда нам необходимо прервать выполнение цикла досрочно, в случае с циклом for это значит до того, 
как цикл переберет все элементы массива.

Зачем такое может понадобится? Например, перед нами стоит задача выводить элементы массива до тех пор, 
пока не встретится число 3. Как только встретится - цикл должен завершить свою работу.

var arr = [1, 2, 3, 4, 5];
for (var i = 0; i < arr.length; i++)
{
	if (arr[i] === 3)
	{
		break; //выходим из цикла
	}
	else
	{
		alert(arr[i]);
	}
}